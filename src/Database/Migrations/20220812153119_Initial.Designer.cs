// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Threenine;

#nullable disable

namespace Threenine.Migrations
{
    [DbContext(typeof(DiogelContext))]
    [Migration("20220812153119_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Diogel")
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Threenine.Diogels.Classification", b =>
                {
                    b.Property<Guid>("ThreatId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ThreatId", "StatusId", "TypeId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TypeId");

                    b.ToTable("classification", "Diogel");
                });

            modelBuilder.Entity("Threenine.Diogels.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("status", "Diogel");
                });

            modelBuilder.Entity("Threenine.Diogels.Threat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Host")
                        .HasMaxLength(41)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar");

                    b.Property<string>("Protocol")
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("QueryString")
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("Referer")
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(35)
                        .HasColumnType("varchar");

                    b.Property<string>("XForwardHost")
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.Property<string>("XForwardProto")
                        .HasMaxLength(256)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("threat", "Diogel");
                });

            modelBuilder.Entity("Threenine.Diogels.Type", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("type", "Diogel");
                });

            modelBuilder.Entity("Threenine.Diogels.Classification", b =>
                {
                    b.HasOne("Threenine.Diogels.Status", "Status")
                        .WithMany("Classifications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Threenine.Diogels.Threat", "Threat")
                        .WithMany()
                        .HasForeignKey("ThreatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Threenine.Diogels.Type", "Type")
                        .WithMany("Classifications")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Threat");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Threenine.Diogels.Status", b =>
                {
                    b.Navigation("Classifications");
                });

            modelBuilder.Entity("Threenine.Diogels.Type", b =>
                {
                    b.Navigation("Classifications");
                });
#pragma warning restore 612, 618
        }
    }
}
